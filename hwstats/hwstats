#!/bin/bash
# Check hardware status: how much power our BPi consumes, how busy our CPUs are
# Written by Izzy (izzy AT qumran DOT org)

# =========================================================[ Configuration ]===
# min/max temperature doesn't seem to be of any use (phantasy values). Set to 1
# to display them anyway
TEMPMINMAX=0
# which disk to check. Set to mmcblk0 for SD card, sda for external disk
DISK=sda

# ===============================================================[ Helpers ]===
# ----------------------------------------------------=[ Float calculation ]=--
# Bash cannot use float, so we revert to awk. Adjust this for calculations
# if you e.g. want to use "bc" instead.
function calc() {
  echo $(awk "BEGIN {printf \"%.1f\",${1}}")
}

# ---------------------------------------------------=[ Provide usage info ]=--
function syntax() {
    echo
    echo "Usage:"
    echo "  $0 <detail>"
    echo
    echo "Available details:"
    echo "  all|a|full          : all details in human-readable format"
    echo "  cpu0freq|cpu1freq   : current frequency of CPU0/CPU1, human-readable"
    echo "  cpu0freqraw         : dito, raw values (Hz)"
    echo "  cpubusy             : percentage CPU was busy since boot"
    echo "  diskinio|diskiniopct: how long (ms/%) the disk was busy since boot"
    echo "  diskreads|diskwrites: how many reads/writes were performed since boot"
    echo "  diskreadtime|diskwritetime: ms spent in read/write since boot"
    echo "  eff|efficiency|watt : power usage in human-readable format"
    echo "  effraw|efficiencyraw|wattraw|mwatt : same as raw value (int) in mW"
    echo "  tmp|temp            : temperature in human-readable format"
    echo "  tmpraw|tempraw      : temperature (raw value, i.e. 1/1000 째C)"
    echo "  netspeed            : network speed in MBit"
    echo "  netstate            : whether the network is 'up' or 'down'"
    echo
    exit 1
}



# ===========================================================[ Calculation ]===
# ----------------------------------------------------=[ Power consumption ]=--
function power() {
    # microAmps:
    amps=$(cat /sys/devices/platform/sunxi-i2c.0/i2c-0/0-0034/axp20-supplyer.28/power_supply/ac/current_now)
    # microVolts
    volts=$(cat /sys/devices/platform/sunxi-i2c.0/i2c-0/0-0034/axp20-supplyer.28/power_supply/ac/voltage_now)
    # watts
    mwatt=$((${amps}*${volts}/1000000000))
    watt=$(calc "${amps}*${volts}/1000000000000")
    pwrdisp="Currently running on $(calc "$volts/1000000") V with $(calc "$amps/1000") mA, eating ${watt} W"
}


# -------------------------------------------------------------=[ CPU data ]=--
function cpu() {
    freq0=$(cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_cur_freq)
    freq1=$(cat /sys/devices/system/cpu/cpu1/cpufreq/cpuinfo_cur_freq)
    freqmin=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq)
    freqmax=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq)
    gov=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor)
    cputempraw=$(cat /sys/devices/platform/sunxi-i2c.0/i2c-0/0-0034/temp1_input)
    cputemp=$(calc "${cputempraw}/1000")
    cpubusy=$(cat /proc/uptime |awk '{printf "%.2f",2- $2/$1}')
    tmpdisp="CPUfreqs (MHz): $((${freq0}/1000))/$((${freq1}/1000)), min/max: $((${freqmin}/1000))/$((${freqmax}/1000)), governor: ${gov}, temperature: ${cputemp} 째C"
    [[ $TEMPMINMAX -gt 0 ]] && {
        cputempmin=$(cat /sys/devices/platform/sunxi-i2c.0/i2c-0/0-0034/temp1_min)
        cputempmin=$(calc "${cputempmin}/1000")
        cputempmax=$(cat /sys/devices/platform/sunxi-i2c.0/i2c-0/0-0034/temp1_max)
        cputempmax=$(calc "${cputempmax}/1000")
        tmpdisp="${tmpdisp} (min/max: ${cputempmin} / ${cputempmax} 째C)"
    }
    tmpdisp="${tmpdisp}, busy since boot: ${cpubusy}%"
}

# ---------------------------------------------------------=[ network data ]=--
function network() {
    netspeed=$(cat /sys/devices/platform/sunxi_gmac/net/eth0/speed)
    netduplex=$(cat /sys/devices/platform/sunxi_gmac/net/eth0/duplex)
    netmtu=$(cat /sys/devices/platform/sunxi_gmac/net/eth0/mtu)
    netstate=$(cat /sys/devices/platform/sunxi_gmac/net/eth0/operstate)
    netif=$(cat /sys/devices/platform/sunxi_gmac/net/eth0/uevent | grep INTERFACE | awk -F= '{print $NF}')
    netdisp="Network: ${netif} ${netstate}, duplex: ${netduplex}, MTU: ${netmtu}, speed: ${netspeed} MBit"
}


# ------------------------------------------------------------=[ disk data ]=--
function disks() {
  if [[ -e /sys/block/${DISK}/stat ]]; then
    uptimes=$(cat /proc/uptime | awk '{print $1}')
    diskinio=$(cat /sys/block/${DISK}/stat | awk '{print $NF}')
    diskiopct=$(awk "BEGIN {printf \"%.2f\",${diskinio} / ${uptimes} / 1000}")
    diskreads=$(cat /sys/block/${DISK}/stat | awk '{print $1}')
    diskreadtime=$(cat /sys/block/${DISK}/stat | awk '{print $4}')
    diskwrites=$(cat /sys/block/${DISK}/stat | awk '{print $5}')
    diskwritetime=$(cat /sys/block/${DISK}/stat | awk '{print $8}')
    diskdisp="Disk /dev/${DISK} since boot: busy for ${diskinio}ms (${diskiopct}%), ${diskreads} reads (${diskreadtime}ms), ${diskwrites} writes (${diskwritetime}ms)"
  else
    diskdisp=
  fi
}


# ================================================================[ Output ]===
case "$1" in
    all|a|full)
        cpu
        power
        network
        disks
        echo
        echo "${pwrdisp}"
        echo "${tmpdisp}"
        echo "${netdisp}"
        echo "${diskdisp}"
        echo
        ;;
    cpu0freq)
        cpu
        echo "$((${freq0}/1000)) MHz"
        ;;
    cpu0freqraw)
        cpu
        echo "${freq0}"
        ;;
    cpu1freq)
        cpu
        echo "$((${freq1}/1000)) MHz"
        ;;
    cpu1freqraw)
        cpu
        echo "${freq1}"
        ;;
    cpubusy)
        cpu
        echo "${cpubusy}"
        ;;
    diskinio)
        disks
        echo "${diskinio}"
        ;;
    diskiopct)
        disks
        echo "${diskiopct}"
        ;;
    diskreads)
        disks
        echo "${diskreads}"
        ;;
    diskreadtime)
        disks
        echo "${diskreadtime}"
        ;;
    diskwrites)
        disks
        echo "${diskwrites}"
        ;;
    diskwritetime)
        disks
        echo "${diskwritetime}"
        ;;
    eff|efficiency|watt)
        power
        echo "${watt} W"
        ;;
    effraw|efficiencyraw|wattraw|mwatt)
        power
        echo "${mwatt}"
        ;;
    tmp|temp)
        cpu
        echo "$cputemp 째C"
        ;;
    tmpraw|tempraw)
        cpu
        echo "${cputempraw}"
        ;;
    netspeed)
        network
        echo "${netspeed}"
        ;;
    netstate)
        network
        echo "${netstate}"
        ;;
    *)
        syntax
        ;;
esac

